
% \newcommand{\Yil}{$\mathcal{Y}\raise1.2ex\hbox{\rotatebox{180}{$\bm{!}$}}\mathrm{l}$}
\newcommand{\Yil}{Yil}

\newcommand{\fv}[1]{\mathrm{fv}\paren{#1}}

\newcommand{\true}{\mathrm{true}}
\newcommand{\false}{\mathrm{false}}

\newcommand{\Func}[3]{\mathrm{func}\paren{#1, #2, #3}}
\newcommand{\App}[2]{#1 \; #2}
\newcommand{\Let}[3]{\mathrm{let} #1 = #2 \mathrm{in} #3}
\newcommand{\If}[3]{\mathrm{if} #1 \mathrm{then} #2 \mathrm{else} #3}

\newcommand{\arity}[2]{\mathrm{arity}_{#1}\paren{#2}}

\newcommand{\subst}[3]{\left[#1/#2\right]#3}

\newcommand{\hole}{\lbrack\rbrack}

\newcommand{\Reduce}[3]{#2 \; \rightarrow_{#1} \; #3}
\newcommand{\MultiReduce}[3]{#2 \; \rightarrow^{*}_{#1} \; #3}

\newcommand{\ERuleAppOp}{\textsc{(E-AppOp)}}
\newcommand{\ERuleAppFunc}{\textsc{(E-FuncApp)}}
\newcommand{\ERuleIfTrue}{\text{(E-IfTrue)}}
\newcommand{\ERuleIfFalse}{\text{(E-IfFalse)}}
\newcommand{\ERuleLetCtx}{\text{(E-Let1)}}
\newcommand{\ERuleLetSubst}{\text{(E-Let2)}}

\newcommand{\sem}[1]{\llbracket #1 \rrbracket}

\newcommand{\StyInt}{\mathrm{int}}
\newcommand{\StyFunc}[2]{#1 \to #2}

\newcommand{\sty}[1]{\mathrm{sty}\paren{#1}}

\newcommand{\StyJudge}[4]{#2 \vdash_{#1} #3 \colon #4}
\newcommand{\STRuleVar}{\textsc{(ST-Var)}}
\newcommand{\STRuleVarFunc}{\textsc{(ST-Var)}}
\newcommand{\STRuleNum}{\textsc{(ST-Num)}}
\newcommand{\STRuleOp}{\textsc{(ST-Op)}}
\newcommand{\STRuleApp}{\textsc{(ST-App)}}
\newcommand{\STRuleIf}{\textsc{(ST-If)}}
\newcommand{\STRuleLet}{\textsc{(ST-Let)}}

\newcommand{\TyInt}[2]{\brace{#1 \mid #2}}
\newcommand{\TyFunc}[3]{\paren{\typed{#1}{#2}} \rightarrow #3}
\newcommand{\FormulaLeq}[2]{#1 \leq #2}
\newcommand{\TermEq}[2]{#1 = #2}
\newcommand{\FormulaTop}{\top}
\newcommand{\FormulaBot}{\bot}
\newcommand{\FormulaNot}[1]{\lnot #1}
\newcommand{\FormulaAnd}[2]{#1 \wedge #2}
\newcommand{\FormulaOr}[2]{#1 \vee #2}
\newcommand{\TermAdd}[2]{#1 + #2}
\newcommand{\TermMult}[2]{#1 \cdot #2}

\newcommand{\TyJudge}[4]{#2 \vdash_{#1} \typed{#3}{#4}}
\newcommand{\SubTyJudge}[4]{#2 \vdash_{#1} #3 <: #4}

\newcommand{\TyRuleVar}{\textsc{Ty-Var}}
\newcommand{\TyRuleFunc}{\textsc{Ty-Func}}
\newcommand{\TyRuleNum}{\textsc{Ty-Num}}
\newcommand{\TyRuleOp}{\textsc{Ty-Op}}
\newcommand{\TyRuleApp}{\textsc{Ty-App}}
\newcommand{\TyRuleIf}{\textsc{Ty-If}}
\newcommand{\TyRuleLet}{\textsc{Ty-Let}}
\newcommand{\TyRuleSub}{\textsc{Ty-Sub}}
\newcommand{\SubTyRuleInt}{\textsc{SubTy-Int}}
\newcommand{\SubTyRuleFunc}{\textsc{SubTy-Func}}
